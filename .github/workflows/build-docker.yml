name: 'build docker'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: "Build:checkout"
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Sets env vars for production
        run: |
          echo "DOCKER_IMAGE_NAME=ghcr.io/mrdavidkovacs/anniversariesapi:latest" >> $GITHUB_ENV
        if: github.event_name == 'push'

      - name: Sets env vars for pullrequests
        run: |
          echo "DOCKER_IMAGE_NAME=ghcr.io/mrdavidkovacs/anniversariesapi:PR-${{ github.event.number }}" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          #platforms: linux/amd64,linux/arm64,linux/386
          platforms: linux/amd64,linux/arm64,linux/386,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          #tags: ${{ steps.prep.outputs.tags }}
          #build-args: ${{ steps.prep.outputs.args }}
          tags: ${{ env.DOCKER_IMAGE_NAME }}